{
    "version": "0.2.0",
    "configurations": [
        {
            "type": "gdb",
            "request": "attach",
            "name": "Attach to Qemu",
            "autorun": ["add-symbol-file ${workspaceFolder}/kernel/target/riscv64/release/nimbos"],
            "target": ":1234",
            "remote": true,
            "cwd": "${workspaceFolder}",
            "valuesFormatting": "parseText",
            "gdbpath": "/opt/riscv/bin/riscv64-unknown-elf-gdb",
            "showDevDebugOutput":true,
            "internalConsoleOptions": "openOnSessionStart",
            "printCalls": true,
            "stopAtConnect": true,
            "qemuPath": "qemu-system-riscv64",
            "qemuArgs": [
                "-nographic",
                "-m",
                "128M",
                "-machine",
                "virt",
                "-bios",
                "default",
                "-kernel",
                "${workspaceFolder}/kernel/target/riscv64/release/nimbos.bin",
                "-s",
                "-S"
            ],
            "program_counter_id": 32,
            "first_breakpoint_group": "kernel",
            "second_breakpoint_group":"${workspaceFolder}/user/rust/src/bin/user_shell.rs",
            "kernel_memory_ranges":[["0x80000000","0xffffffffffffffff"]],
            "user_memory_ranges":[["0x0000000000000000","0x80000000"]],
            "border_breakpoints":[
                {
                    "filepath": "${workspaceFolder}/kernel/src/arch/riscv/context.rs",
                    "line": 91
                },
                {
                    "filepath": "${workspaceFolder}/kernel/src/syscall/mod.rs",
                    "line": 56
                },
                {
                    "filepath": "${workspaceFolder}/user/rust/src/arch/riscv.rs",
                    "line": 8
                },
                {
                    "filepath": "${workspaceFolder}/user/rust/src/arch/riscv.rs",
                    "line": 28
                }
            ],
            "hook_breakpoints":[
                {
                    "breakpoint": {
                        "file": "${workspaceFolder}/kernel/src/syscall/task.rs",
                        "line": 37
                    },
                    "behavior": {
                        "isAsync": true,
                        "functionArguments": "",
                        "functionBody": "let p=await this.getStringVariable('path'); return '${workspaceFolder}/user/rust/src/bin/'+p+'.rs'"
                    }
                }
            ],
            "filePathToBreakpointGroupNames":{
                "isAsync": false,
                "functionArguments": "filePathStr",
                "functionBody": "if (filePathStr.includes('kernel/src')) {    return ['kernel'];  } else if (filePathStr.includes('user/rust/src/bin')) {    return [filePathStr];  } else if (    !filePathStr.includes('user/rust/src/bin') &&    filePathStr.includes('user/rust/src')  ) {    return [      '${workspaceFolder}/user/rust/src/bin/exit.rs',      '${workspaceFolder}/user/rust/src/bin/forktree.rs',      '${workspaceFolder}/user/rust/src/bin/stack_overflow.rs',      '${workspaceFolder}/user/rust/src/bin/fantastic_text.rs',      '${workspaceFolder}/user/rust/src/bin/hello_world.rs',      '${workspaceFolder}/user/rust/src/bin/thread_simple.rs',      '${workspaceFolder}/user/rust/src/bin/forktest2.rs',      '${workspaceFolder}/user/rust/src/bin/matrix.rs',      '${workspaceFolder}/user/rust/src/bin/user_shell.rs',      '${workspaceFolder}/user/rust/src/bin/forktest.rs',      '${workspaceFolder}/user/rust/src/bin/sleep.rs',      '${workspaceFolder}/user/rust/src/bin/usertests.rs',      '${workspaceFolder}/user/rust/src/bin/forktest_simple.rs',      '${workspaceFolder}/user/rust/src/bin/sleep_simple.rs',      '${workspaceFolder}/user/rust/src/bin/yield.rs'    ];  } else return ['kernel'];"
            },
            "breakpointGroupNameToDebugFilePaths":{
                "isAsync": false,
                "functionArguments": "groupName",
                "functionBody": "if (groupName === 'kernel') {        return ['${workspaceFolder}/kernel/target/riscv64/release/nimbos'];    }    else {        let pathSplited = groupName.split('/');        let filename = pathSplited[pathSplited.length - 1].split('.');        let filenameWithoutExtension = filename[filename.length - 2];        return ['${workspaceFolder}/user/build/riscv64/' + filenameWithoutExtension];    }"
            }
        }
    ]
}
